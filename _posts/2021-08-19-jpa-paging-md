---
title: "JPA 페이징(paging) 처리"
search: false
category:
  - spring-boot
  - jpa
  - junit
last_modified_at: 2021-08-19T22:00:00
---

<br>

JPA를 사용하면서 정말 편해졌다고 느낀 이유 중 한가지가 페이징(paging) 처리 방법입니다. 
간단한 예제 코드를 통해 사용 방법에 대해 알아보겠습니다. 
예제 코드를 만나보기 전에 페이징 처리에 사용되는 인터페이스와 클래스를 살펴보겠습니다. 

## Pageable 인터페이스
예제 코드에서 확인할 수 있겠지만, Pageable 인터페이스 구현체를 JpaRepository 메소드에 파라미터로 넘겨주기만 하면 자동으로 페이징 처리가 됩니다.  
개발자가 Pageable 인터페이스를 직접 조작하는 일은 별로 없겠지만 어떤 기능을 제공하는지는 확인해보겠습니다. 

Pageable 인터페이스에 대한 기능을 간단하게 요약하면 다음과 같습니다.
- JPA 가 페이징 처리를 위해 필요한 기능들을 명세하고 있습니다.
- getPageNumber 메소드 - 현재 페이지 번호를 반환
- getPageSize 메소드 - 한 페이지에서 보여줄 항목들의 개수를 반환
- getOffset 메소드 - 페이지 크기에 따라 취할 오프셋을 반환
- next 메소드 - 다음 페이지를 조회할 때 사용하는 Pageable 인터페이스를 반환
- first 메소드 - 첫번째 페이지를 조회할 때 사용하는 Pageable 인터페이스를 반환
- previousOrFirst 메소드 - 이전 페이지를 조회할 때 사용하는 Pageable 인터페이스를 반환, 가장 첫 페이지인 경우에는 첫 페이지를 위한 Pageable 인터페이스를 반환

### Pageable 인터페이스 구조

```java
public interface Pageable {

    // ... 

    int getPageNumber();

    int getPageSize();

    long getOffset();

    Pageable next();

    Pageable previousOrFirst();

    Pageable first();
}
```

## PageRequest 클래스

## Page<T> 클래스

## 테스트 코드

### findBy- 메소드 사용

### @Query 애너테이션 사용

#### JPQL 사용

#### Native Query 사용

## OPINION
오늘 주제와는 맞지 않아서 MyBatis 페이징 처리에 대해 언급하진 않았습니다. 
다음 기회에 MyBatis에서 사용하는 페이징 처리 예제 코드를 정리하면서 JPA 페이징 처리 방법과 비교해보겠습니다. 

#### TEST CODE REPOSITORY
- <https://github.com/Junhyunny/blog-in-action>

#### REFERENCE
- <>