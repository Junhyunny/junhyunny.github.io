---
title: "Class Diagram in UML"
search: false
category:
  - information
last_modified_at: 2023-12-31T23:55:00
---

<br/>

## 0. 들어가면서

클래스 다이어그램(class diagram)이라는 말을 들으면 주니어 개발자 시절 프로젝트 설계 문서에 클래스 다이어그램을 그리면서 "다시 읽지도 않을 문서에 그림 그리기를 너무 열심히 하고 있네" 라고 불평했던 기억이 떠오른다. 프로젝트 경험이 쌓이다보니 다른 개발자들이나 PM들과 의사소통할 떄 이만한 도구가 없는 것 같다. 말로만 "이렇게 저렇게"라고 표현하는 것은 내 머리 속에만 있을 뿐 아무도 이해하지 못 한다. 

- 프로젝트 초반 나의 도메인 설계에 대한 고민을 논리적으로 시각화할 수 있었다.
- 레거시 시스템에 대한 클래스 다이어그램이 있다면 소스 코드만 있을 때보다 더 빠르게 분석할 수 있었다.

책을 쓰면서 그리는 클래스 다이어그램들이 들쭉 날쭉했다. 클래스 다이어그램을 매번 검색하면서 그리다보니 일관성 없이 표현한 것 같다. 책은 독자들과 실시간 피드백이 되지 않기 때문에 프로젝트에서처럼 대충 그리고 말로 때우는 식이 안 된다. 독자에게 정확하고 일관성 있는 의사 전달을 하기 위해 이 글을 쓰면서 클래스 다이어그램에 대해 다시 공부했다. 

## 1. Unified Modeling Language 

클래스 다이어그램은 통합 모델링 언어(Unified Modeling Language, UML)의 한 종류다. 통합 모델링 언어가 무엇인지 먼저 살펴보자.

> 통합 모델링 언어(Unified Modeling Language, UML)는 소프트웨어 공학에서 사용되는 표준화 된 범용 모델링 언어이다.

모델링은 직접 만들기 전에 비용을 적게 들여 무언가를 표현하는 작업이다. 건물처럼 실제로 지으면 비용이 많이 들기 때문에 3D 모델링을 통해 적은 비용으로 이해 관계자들이 건물의 구조, 크기 등을 이해할 수 있다. 소프트웨어도 마찬가지로 구현하는데 드는 시간과 비용을 무시할 수 없기 때문에 모델링이라는 시각적 표현으로 의사소통을 수행한 것 같다.

통합 모델링 언어는 객체 관리 그룹(Object Management Group, OMG)라는 비영리 단체에 의해 1997년 표준으로 체택되었다. 통합 모델링 언어는 여러가지 다이어그램을 통해 소프트웨어를 표현한다. 크게 두 종류로 구분된다. 

- 구조 다이어그램(structure diagram)
  - 추상화 및 구현 수준에서 시스템과 각 부품의 정적 구조와 연관 관계를 보여준다.
  - 클래스 다이어그램은 구조 다이어그램에 속한다.
- 행동 다이어그램(behavior diagram)
  - 시간 경과에 따른 시스템 내 변화나 내부 객체들의 동작, 클라이언트와 시스템들 사이의 통신 과정을 보여준다.
  - 유스 케이스(use case) 다이어그램과 시퀀스(sequence) 다이어그램이 행동 다이어그램에 속한다.

<p align="center">
  <img src="/images/class-diagram-in-uml-01.png" width="100%" class="image__border">
</p>
<center>https://www.nextree.co.kr/p6753/</center>

## 2. Class Diagram

위 내용을 요약해보자.

- 클래스 다이어그램은 UML 다이어그램의 구조 다이어그램 중 하나다.
- 구조 다이어그램은 시스템을 구성하는 각 부품의 정적 구조와 연관 관계를 보여주기 위한 시각적 표현이다. 

자바(java) 애플리케이션을 구성하는 부품은 클래스(class)다. 애플리케이션을 구성하는 클래스들의 정적 구조와 연관 관계를 클래스 다이어그램을 통해 표현할 수 있다. 

작은 비즈니스 기능에도 참여하는 클래스들이 굉장히 많을 수 있다. 클래스 다이어그램은 모델링 언어이기 때문에 모든 것을 상세하게 표현하기 위한 수단이 아니다. 전달하고 싶은 내용을 효과적으로 표현하는데 집중하는 것이 중요하다. 클래스 다이어그램에 클래스가 너무 많다면 다이어그램을 통해 전달하고 싶은 메세지를 다시 고민해봐야 한다.

### 2.1. Class Diagram Element



### 2.2. Class Diagram Relation










 내용도 정리할 겸 클래스 다이어그램에 대한 내용을   




연관은 그냥 실선
연관 방향과 타입이 모두 있음
스테레오 타입 
클래스가 이태릭 타입이면 추상 클래스, 추상 메소드
컴포지션이 더 강한 결합을 의미한다.

## CLOSING

#### TEST CODE REPOSITORY

#### RECOMMEND NEXT POSTS

#### REFERENCE

- [통합 모델링 언어](https://ko.wikipedia.org/wiki/%ED%86%B5%ED%95%A9_%EB%AA%A8%EB%8D%B8%EB%A7%81_%EC%96%B8%EC%96%B4)
- [객체 관리 그룹](https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EA%B4%80%EB%A6%AC_%EA%B7%B8%EB%A3%B9)
- <https://www.nextree.co.kr/p6753/>
- <https://wikidocs.net/212037>
- <https://www.youtube.com/watch?v=eBylHYAlzZk>
- <https://www.youtube.com/watch?v=HG0dwNnTsII>