---
title: "withValidation by High Order Component Pattern"
search: false
category:
  - react
  - design-pattern
last_modified_at: 2023-12-30T23:55:00
---

<br/>

## 0. 들어가면서

애플리케이션 개발은 반복되는 코드와의 싸움이다. 반복되는 패턴이 보이면 리팩토링을 통해 불필요한 코드를 줄이는 것이 가장 빠르게 가는 길이다. 실용주의 프로그래머라는 책을 보면 이를 DRY(Don't Repeat Yourself) 원칙이라는 이름으로 소개하고 있다. 대표적인 프론트엔드 라이브러리인 리액트(react)에도 코드 반복을 줄일 수 있는 고차 컴포넌트(High Order Component, HOC)라는 패턴이 존재한다. 이 글은 고차 컴포넌트 패턴을 통해 반복 코드를 리팩토링한 내용에 대해 정리했다. 

## 1. Problem

텍스트 박스(text box)를 통해 사용자에게 다양한 정보를 입력 받는다. 입력 받는 데이터 중에는 포맷을 확인할 필요가 있는 경우가 있다. 잘못된 포맷으로 입려된 데이터는 시스템이 동작하는 중간에 런타임 예외(runtime exception)을 유발할 확률이 높기 때문이다. 현재 다음과 같은 데이터에 대한 포맷을 확인하고 있다.

- IP 주소
- 이메일
- 전화번호
- 날짜

이에 따라 다양한 컴포넌트가 만들어졌다. 

- IpInput
- EmailInput
- PhoneContactInput
- DateInput

위 4개의 컴포넌트 모습은 일부분만 제외하고 완전히 똑같다. IpInput 컴포넌트와 EmailInput 컴포넌트를 비교해보자. 

- 포커스아웃(focusout) 되었을 때 



## 2. High Order Component Pattern




## 3. Solve the Problem

## CLOSING

#### TEST CODE REPOSITORY

#### RECOMMEND NEXT POSTS

#### REFERENCE

- <https://ko.legacy.reactjs.org/docs/higher-order-components.html>
- 