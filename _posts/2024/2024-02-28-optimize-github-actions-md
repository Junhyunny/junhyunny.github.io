---
title: "Optimize Github Actions"
search: false
category:
  - information
  - github
  - dev-ops
last_modified_at: 2024-02-28T23:55:00
---

<br/>

#### RECOMMEND POSTS BEFORE THIS

- [Github Actions Example][github-actions-example-link]

## 0. 들어가면서

[Github Actions Example][github-actions-example-link]에서 간단한 파이프라인을 구성하는 방법에 대해 다뤘다. 이번 글은 파이프라인을 최적화하는 방법에 대해 정리했다. 

## 1. Cache Action in Github Actions

CI/CD 파이프라인을 여러번 구축해보니 가장 시간을 많이 차지하는 작업은 필요한 의존성들을 다운로드 받는 것이다. 젠킨스(jenkins)나 깃랩(gitlab)에서 파이프라인을 구축할 때도 다운로드 받은 의존성을 재사용해서 빌드 시간을 줄이는 방법들이 존재한다. 깃허브 액션스에도 마찬가지로 의존성 재사용을 통한 파이프라인 시간을 단축하는 방법이 있다. 

캐시 액션(cache action)라는 액션을 사용하면 다운로드 의존성을 재사용할 수 있다. 캐시 액션의 특징을 먼저 살펴보자.

- 

## 1. Gradle Caching

## CLOSING

#### TEST CODE REPOSITORY

#### RECOMMEND NEXT POSTS

#### REFERENCE

[github-actions-example-link]: https://junhyunny.github.io/information/github/dev-ops/github-actions-example/