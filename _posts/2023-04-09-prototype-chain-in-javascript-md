---
title: "Prototype Chain in JavaScript"
search: false
category:
  - javascript
last_modified_at: 2023-04-09T23:55:00
---

<br/>

#### RECOMMEND POSTS BEFORE THIS

* [Prototype in JavaScript][prototype-in-javascript-link]

## 0. 들어가면서

이번 포스트에선 프로토타입 체인을 통한 객체 탐색과 프로퍼티 오버라이딩(overriding), 쉐도잉(shadowing)에 대한 개념을 정리하였습니다. 

## 1. Prototype Chain

[Prototype in JavaScript][prototype-in-javascript-link] 포스트에서 정리했듯이 `JavaScript`는 프로토타입을 통해 상속을 지원합니다. 
프로토타입은 생성자를 통해 만들어진 인스턴스의 부모 객체입니다. 

인스턴스는 자신에게 없는 프로퍼티가 있다면 부모 프로토타입을 탐색합니다. 
부모 프로토타입에도 프로퍼티가 존재하지 않는다면 그 다음 상위 프로토타입을 탐색합니다. 
이렇게 

```javascript
function Circle(radius) {
    this.radius = radius;
}

Circle.prototype.getArea = function () {
    return Math.PI * this.radius ** 2;
}

const firstCircle = new Circle(1);

console.dir(firstCircle);
console.dir(firstCircle.__proto__);
console.dir(firstCircle.__proto__.__proto__);
console.dir(firstCircle.__proto__.__proto__.__proto__); // null

console.dir(Circle);
console.dir(Circle.__proto__);

console.dir(Function.prototype === Circle.__proto__); // true
console.dir(Function.prototype === Function.__proto__); // true
console.dir(Circle.prototype === firstCircle.__proto__); // true
console.dir(Object.prototype === firstCircle.__proto__.__proto__); // true
```

<p align="left">
    <img src="/images/prototype-chain-in-javascript-1.JPG" width="60%" class="image__border">
</p>




## 2. Property Overriding and Shadowing

## CLOSING

#### TEST CODE REPOSITORY

#### RECOMMEND NEXT POSTS

#### REFERENCE

* [모던 자바스크립트 Deep Dive 자바스크립트의 기본 개념과 동작 원리][modern-javascript-book-link]
* [인사이드 자바스크립트 Inside JavaScript 핵심 개념과 원리를 정확하게.][inside-javascript-book-link]

[modern-javascript-book-link]: http://www.yes24.com/product/goods/92742567
[inside-javascript-book-link]: http://www.yes24.com/product/goods/37157296
[prototype-in-javascript-link]: https://junhyunny.github.io/javascript/prototype-in-javascript/