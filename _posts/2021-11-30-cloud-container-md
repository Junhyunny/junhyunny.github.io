---
title: "Cloud Container"
search: false
category:
  - information
last_modified_at: 2021-11-30T23:55:00
---

<br>

## 0. 들어가면서

새로운 회사에 온보딩 과정을 진행하면서 새로운 내용들을 보고 배우고 있습니다. 
회사의 주요 솔루션들 대부분이 컨테이너 기반으로 이루어지는 작업들인데, 생각해보니 저는 컨테이너에 대한 정확한 개념을 모르고 있습니다. 
소속한 팀과 맡은 역할은 컨테이너 솔루션과 다소 거리가 있지만, 
컨테이너에 대한 기본적인 개념과 이를 이용한 간단한 서비스 배포, 아키텍처 구성까지는 할 수 있는 역량은 필요할 것 같습니다. 

원하는 역량까지 향상하기 위한 첫걸음으로 컨테이너에 대한 개념을 정리하였습니다. 
컨테이너에 대한 내용들을 읽어보면 흔히 가상 머신(Virtual Machine)과 비교를 합니다. 
가상 머신을 사용할 때 어떤 문제점들이 있었고, 왜 컨테이너가 클라우드 시장에서 우위를 선점하게 되었는지 이야기해보겠습니다.

## 1. 가상 머신(Virtual Machine)

> 물리적 컴퓨터와 동일한 기능을 제공하는 소프트웨어 컴퓨터입니다. 

가상 머신은 물리적인 컴퓨터에서 실행되는 소프트웨어입니다. 
이 소프트웨어는 컴퓨터 환경을 에뮬레이팅(emulating)합니다. 
가상 머신은 자신이 물리적 컴퓨터처럼 동작하며, 컴퓨터를 관리하는 운영체제(예를 들어, Windows, Linux, MacOS)와 애플리케이션을 실행합니다. 

가상 머신 내부에 소프트웨어는 호스트 컴퓨터를 변조할 수 없기 때문에 
바이러스에 감염된 데이터에 액세스하거나 운영 체제를 테스트하는 것처럼 위험한 작업을 수행하기 위해 사용합니다. 
서버 가상화 등의 목적으로도 사용됩니다. 

## 1.1. 가상 머신 구조
- 물리적인 기계(hardware)와 이를 관리하는 호스트 운영체제(host os)가 존재합니다. 
- 가상 머신이 동작할 수 있는 환경을 만들어주는 하이퍼바이저(hypervisor) 플랫폼이 호스트 운영체제에서 동작합니다.
- 가상 머신 에뮬레이터가 하이퍼바이저 플랫폼에서 동작합니다.
- 가상 머신 내부에서 별도의 운영체제와 실행 파일, 라이브러리, 어플리케이션이 동작합니다.
- 가상 머신들끼리는 독립적(independent)으로 구성되며 서로의 존재를 알 수 없습니다. 

<p align="left"><img src="/images/cloud-container-1.gif" width="75%"></p>

## 1.2. 가상 머신의 장점
다음과 같은 장점을 가지고 있습니다.
- 하나의 물리적 컴퓨터에서 여러 운영 체제 환경을 실행할 수 있습니다.
- 호스트에서 진행하기 위험한 작업을 수행할 수 있습니다.

## 1.2. 가상 머신의 한계
다음과 같은 한계점을 가지고 있습니다. 
- 하나의 물리적 시스템에서 여러 가상 머신을 사용하는 경우 성능이 불안정해질 수 있습니다.
- 가상 머신은 물리적 컴퓨터보다 효율성이 떨어지고 실행 속도가 느립니다.
- Guest OS 인스턴스가 필요하기 때문에 더 많은 자원(resource)을 필요로 합니다.
- 하드웨어 수준의 가상화가 이루어지면서 자원을 공유하지 못 합니다.

## 2. 컨테이너(Container)

> 컨테이너는 데스크탑, 기존의 IT 또는 클라우드 등 어디서나 실행될 수 있도록 애플리케이션 코드가 
> 해당 라이브러리 및 종속 항목과 함께 패키징되어 있는 소프트웨어 실행 유닛입니다.

### 2.1. 컨테이너 구조

### 2.2. 컨테이너 특장점

### 2.3. 컨테이너 런타임(Runtime)

매니페스트 생성 > 컨테이너화

컨테이너 안에는 모든 런타임 및 라이브러리와 바이너리가 포함됩니다.

VM은 하드웨어 수준에서 가상화가 발생하기 때문에 하드웨어 가상화라고 한다.
하이퍼바이저(hypervisor)에 의해서 가상화가 이루어진다.
전체 가상화
하나의 머신에 가상의 여러 서버가 있는 것처럼 동작한다.

컨테이너는 운영체제 수준의 가상화가 이루어진다.
리소스를 공유할 수 있다.
운영체제를 공유한다. 프로세스 수준의 격리를 한다.

이식성과 유연성

#### REFERENCE
- <https://www.ibm.com/kr-ko/cloud/learn/containers>
- <https://www.ibm.com/cloud/blog/containers-vs-vms>
- <https://www.vmware.com/kr/topics/glossary/content/virtual-machine.html>