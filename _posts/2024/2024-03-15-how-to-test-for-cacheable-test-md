---
title: "How to test for @Cacheable annotation"
search: false
category:
  - kotlin
  - spring-boot
last_modified_at: 2024-03-15T23:55:00
---

<br/>

## 0. 들어가면서

비즈니스 로직 중 빈번하게 호출되는 쿼리(query)가 있었고, 성능 향상을 위해 캐시를 적용하기로 했다. 스프링 부트(spring boot)는 기본적으로 캐시 기능을 제공한다. @EnableCaching, @Cacheable 애너테이션을 사용하면 쉽게 적용할 수 있다. 이번 글은 @Cacheable 애너테이션을 사용했을 때 캐시가 정상적으로 동작하는지 확인할 수 있는 테스트하는 방법에 대해 정리했다. 프레임워크가 제공하는 캐시 기능을 테스트하는 코드가 의미가 있는지 없는지 의문이 들지만, 이번 프로젝트에선 테스트 코드를 작성하기로 결정했고, 관련된 내용을 기록하기 위해 글로 정리했다. 

## 1. Business Logic

코드는 설명을 위해 일부 각색했다. 다음과 같은 카테고리, 서브 카테고리 아이디를 사용해 관련 상품들을 조회하는 비즈니스 로직이 있다. 

```kotlin

```




## 2. Tests

### 2.1. Save Result in Cache

### 2.2. Reuse Result in Cache

## CLOSING

#### TEST CODE REPOSITORY

#### RECOMMEND NEXT POSTS

#### REFERENCE
